#test 1
method Square(x: Integer) : Integer is
    return x.Mult(x)
end

var n : Integer(5)
Square(n)

#test 2
class SquareSum is
    var sum : Integer

    this(a: Integer, b: Integer) is
        a_square := a.Mult(a)
        b_square := b.Mult(b)
        sum := a_square.Plus(b_square)
    end
end

var n : SquareSum(2, 3)

#test 3
var a : Array[Integer](5)
var i : Integer(1)

while i.Less(a.Length) loop
    a.set(i, i)
    i := i.Plus(1)
end

#test 4 (error)
var a : String("Hello, World!")

#test 5
var n : Integer(10)
var bool : Boolean(true)

if n.GreaterEqual(10.1) then
    bool := true
else
    bool := false

#test 6 (error)
var a : Integer(10)
var b : Boolean(true)

var n := a.Plus(b)

#test 7 (error)
var a : Integer(10)
var b := a.Unknown()

#test 8
class Simple is
  var x := Integer(1)
  this() is
    x := x.Plus(Integer(2))
  end
end

#test 9(error, possible only using special methods)
class A is
  var x := Integer(0)
  this() is
    x := Integer(1)
  end
end

class B is
  this() is
    var a := A()
    a.x := Integer(5) //error is here
  end
end

#test 10. compiler must understand that a.set(Integer(2)) := Integer(99) id equivalent to a.set(Integer(2), Integer(99))

class ArrTest is
  this() is
    var a := Array(3)
    a.set(Integer(0), Integer(10))
    a.set(Integer(1), Integer(20))
    a.set(Integer(2)) := Integer(99)
  end
end

#test 11 (error, has not method with argument boolean, only integer)
method C1(x: Integer) : Integer is
    return x.Plus(1)
end

var n : Boolean(true)
C1(n)


